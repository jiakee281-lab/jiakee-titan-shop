{"ast":null,"code":"import _objectSpread from\"C:/Users/ake28/Downloads/Titan/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={items:[],total:0};const cartReducer=(state,action)=>{switch(action.type){case'ADD_ITEM':{const existingItem=state.items.find(item=>item.id===action.payload.id);if(existingItem){return _objectSpread(_objectSpread({},state),{},{items:state.items.map(item=>item.id===action.payload.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item),total:state.total+action.payload.price});}return _objectSpread(_objectSpread({},state),{},{items:[...state.items,_objectSpread(_objectSpread({},action.payload),{},{quantity:1})],total:state.total+action.payload.price});}case'REMOVE_ITEM':{const itemToRemove=state.items.find(item=>item.id===action.payload);return _objectSpread(_objectSpread({},state),{},{items:state.items.filter(item=>item.id!==action.payload),total:state.total-(itemToRemove?itemToRemove.price*itemToRemove.quantity:0)});}case'UPDATE_QUANTITY':{const item=state.items.find(item=>item.id===action.payload.id);if(!item)return state;const quantityDiff=action.payload.quantity-item.quantity;return _objectSpread(_objectSpread({},state),{},{items:state.items.map(item=>item.id===action.payload.id?_objectSpread(_objectSpread({},item),{},{quantity:action.payload.quantity}):item),total:state.total+item.price*quantityDiff});}case'CLEAR_CART':return initialState;default:return state;}};const CartContext=/*#__PURE__*/createContext(undefined);export const useCart=()=>{const context=useContext(CartContext);if(context===undefined){throw new Error('useCart must be used within a CartProvider');}return context;};export const CartProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(cartReducer,initialState);const addItem=product=>{dispatch({type:'ADD_ITEM',payload:product});};const removeItem=id=>{dispatch({type:'REMOVE_ITEM',payload:id});};const updateQuantity=(id,quantity)=>{dispatch({type:'UPDATE_QUANTITY',payload:{id,quantity}});};const clearCart=()=>{dispatch({type:'CLEAR_CART'});};return/*#__PURE__*/_jsx(CartContext.Provider,{value:{state,addItem,removeItem,updateQuantity,clearCart},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsx","_jsx","initialState","items","total","cartReducer","state","action","type","existingItem","find","item","id","payload","_objectSpread","map","quantity","price","itemToRemove","filter","quantityDiff","CartContext","undefined","useCart","context","Error","CartProvider","_ref","children","dispatch","addItem","product","removeItem","updateQuantity","clearCart","Provider","value"],"sources":["C:/Users/ake28/Downloads/Titan/src/context/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\r\n\r\nexport interface Product {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  category: string;\r\n  brand: string;\r\n  description: string;\r\n}\r\n\r\nexport interface CartItem extends Product {\r\n  quantity: number;\r\n}\r\n\r\ninterface CartState {\r\n  items: CartItem[];\r\n  total: number;\r\n}\r\n\r\ntype CartAction =\r\n  | { type: 'ADD_ITEM'; payload: Product }\r\n  | { type: 'REMOVE_ITEM'; payload: string }\r\n  | { type: 'UPDATE_QUANTITY'; payload: { id: string; quantity: number } }\r\n  | { type: 'CLEAR_CART' };\r\n\r\nconst initialState: CartState = {\r\n  items: [],\r\n  total: 0,\r\n};\r\n\r\nconst cartReducer = (state: CartState, action: CartAction): CartState => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM': {\r\n      const existingItem = state.items.find(item => item.id === action.payload.id);\r\n      if (existingItem) {\r\n        return {\r\n          ...state,\r\n          items: state.items.map(item =>\r\n            item.id === action.payload.id\r\n              ? { ...item, quantity: item.quantity + 1 }\r\n              : item\r\n          ),\r\n          total: state.total + action.payload.price,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        items: [...state.items, { ...action.payload, quantity: 1 }],\r\n        total: state.total + action.payload.price,\r\n      };\r\n    }\r\n    case 'REMOVE_ITEM': {\r\n      const itemToRemove = state.items.find(item => item.id === action.payload);\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.id !== action.payload),\r\n        total: state.total - (itemToRemove ? itemToRemove.price * itemToRemove.quantity : 0),\r\n      };\r\n    }\r\n    case 'UPDATE_QUANTITY': {\r\n      const item = state.items.find(item => item.id === action.payload.id);\r\n      if (!item) return state;\r\n      \r\n      const quantityDiff = action.payload.quantity - item.quantity;\r\n      return {\r\n        ...state,\r\n        items: state.items.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, quantity: action.payload.quantity }\r\n            : item\r\n        ),\r\n        total: state.total + (item.price * quantityDiff),\r\n      };\r\n    }\r\n    case 'CLEAR_CART':\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ninterface CartContextType {\r\n  state: CartState;\r\n  addItem: (product: Product) => void;\r\n  removeItem: (id: string) => void;\r\n  updateQuantity: (id: string, quantity: number) => void;\r\n  clearCart: () => void;\r\n}\r\n\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (context === undefined) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface CartProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, initialState);\r\n\r\n  const addItem = (product: Product) => {\r\n    dispatch({ type: 'ADD_ITEM', payload: product });\r\n  };\r\n\r\n  const removeItem = (id: string) => {\r\n    dispatch({ type: 'REMOVE_ITEM', payload: id });\r\n  };\r\n\r\n  const updateQuantity = (id: string, quantity: number) => {\r\n    dispatch({ type: 'UPDATE_QUANTITY', payload: { id, quantity } });\r\n  };\r\n\r\n  const clearCart = () => {\r\n    dispatch({ type: 'CLEAR_CART' });\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ state, addItem, removeItem, updateQuantity, clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}